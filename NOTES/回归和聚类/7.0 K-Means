K-Means:
    是一种无监督学习.
    * 无监督学习:
        没有目标值的算法, 例如K-均值聚类, PCA(降维)

    原理:
    步骤:
        1. 随机设置K个特征空间内的点作为初始聚类中心
        2. 对于其他每个点计算到K个中心的距离, 未知的点选择最近的一个聚类中心作为标记类别
        3. 接着对着标记的聚类中心之后, 重新计算出每个聚类中心(平均值)
        4. 如果计算出的新中心点与原中心点一样, 那么结束, 否则重复第二步和第三步

    API: sklearn.cluster.KMeans(n_clusters=8, init='k-means++')
        - k-means聚类
        - n_clusters: 开始的聚类中心个数
        - init: 初始化方法, 默认为'k-means++'
        - labels_: 默认标记的类型, 可以和真实值比较(不是值比较)

    案例: k-means对Instacart Market用户的聚类
            k = 3
            流程分析:
            1) 预估器流程
            2) 观察每个样本的类别
            3) 模型评估

    聚类效果评估
        1. 轮廓系数(范围: [-1, 1])
            sc = (bi - ai) / max(bi, ai)
            不同簇距离最大化, 同簇距离最小化
            当 bi >> ai, sc -> 1
            当 bi << ai, sc -> -1
            该值越接近1效果越好, 越接近-1效果越差

            API: sklearn.metrics.silhouette_score(X, labels)
                - 计算所有样本的平均轮廓系数
                - X: 特征值
                - labels: 被聚类标记的目标值

    总结:
        - 特点: 采用迭代式算法, 直观易懂且非常实用
        - 缺点: 容易收敛到局部最优解(可多次聚类来避免)
    应用场景:
        没有目标值
        聚类一般在分类之前
